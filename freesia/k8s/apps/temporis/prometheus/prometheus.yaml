apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: prometheus
  labels:
    app.kubernetes.io/name: prometheus
spec:
  alerting:
    alertmanagers:
      - namespace: temporis
        name: alertmanager
        port: http-web
        pathPrefix: "/"
        apiVersion: v2
  image: "quay.io/prometheus/prometheus:REPLACE_HERE"
  version: v2.47.1
  externalUrl: "http://prometheus-v3.harvestasya.org/"
  paused: false
  replicas: 1
  shards: 1
  logLevel: info
  logFormat: logfmt
  listenLocal: false
  enableAdminAPI: true
  retention: "10d"
  tsdb:
    outOfOrderTimeWindow: 0s
  walCompression: true
  routePrefix: "/"
  serviceAccountName: prometheus
  serviceMonitorSelector:
    matchLabels:
      app.kubernetes.io/name: prometheus

  serviceMonitorNamespaceSelector: {}
  podMonitorSelector:
    matchLabels:
      app.kubernetes.io/name: prometheus

  podMonitorNamespaceSelector: {}
  probeSelector:
    matchLabels:
      app.kubernetes.io/name: prometheus

  probeNamespaceSelector: {}
  securityContext:
    fsGroup: 2000
    runAsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
    seccompProfile:
      type: RuntimeDefault
  ruleNamespaceSelector: {}
  ruleSelector:
    matchLabels:
      app.kubernetes.io/name: prometheus

  scrapeConfigSelector:
    matchLabels:
      app.kubernetes.io/name: prometheus

  scrapeConfigNamespaceSelector: {}
  storage:
    volumeClaimTemplate:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi
        storageClassName: nfs-client
  additionalScrapeConfigs:
    name: prometheus-scrape-confg
    key: additional-scrape-configs.yaml
  thanos:
    image: quay.io/thanos/thanos:REPLACE_HERE
    objectStorageConfig:
      key: object-store.yaml
      name: thanos-bucket-config
  portName: http-web
  hostNetwork: false
