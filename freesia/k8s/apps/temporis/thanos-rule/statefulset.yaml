apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: thanos-rule
  labels:
    app.kubernetes.io/name: thanos-rule
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: thanos-rule
  serviceName: thanos
  template:
    metadata:
      labels:
        app.kubernetes.io/name: thanos-rule
    spec:
      containers:
        - name: thanos-rule
          image: "quay.io/thanos/thanos:v0.32.5"
          imagePullPolicy: IfNotPresent
          resources: {}
          args:
            - "rule"
            - "--data-dir=/var/thanos/store"
            - "--log.level=info"
            - "--log.format=logfmt"
            - "--http-address=0.0.0.0:10902"
            - "--grpc-address=0.0.0.0:10901"
            - "--objstore.config-file=/etc/config/object-store.yaml"
            - "--rule-file=/etc/rules/*.yaml"
            - "--query=dnssrv+_http._tcp.thanos-query-http.temporis.svc.cluster.local"
          ports:
            - name: http
              containerPort: 10902
            - name: grpc
              containerPort: 10901
          volumeMounts:
            - name: rule-volume
              mountPath: /etc/rules
              readOnly: true
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
            - name: data
              mountPath: /var/thanos/store
      volumes:
        - name: config-volume
          secret:
            secretName: "thanos-bucket-config"
        - name: rule-volume
          configMap:
            name: thanos-rules
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: thanos-rule
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: nfs-client
